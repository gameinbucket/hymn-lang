--
--           The Hymn Compiler
-- Copyright 2019 Nathan Michael McMillan
--

import "program"
import "flags" (flags)

const debug = true
const debug_tokens = true
const debug_ast = true

class error
    code    string
    message string

class tuple<x,y>
    a x
    b x

enum either<x,y>
    one(value x)
    two(value y)

def fmc(depth int) string
    mutable space = ""
    for i = 0; i < depth; i += 1
        space += "    "
    return space

def exec_compile(f flags) either<string, error>
    echo(f.write_to)
    return either.one("")

def help
    echo("Hymn command line interface.")
    echo("")
    echo("Usage:")
    echo("")
    echo("    hymn <command> [arguments]")
    echo("")
    echo("The commands are:")
    echo("")
    echo("    fmt      format a file")
    echo("    build    compile a program")
    echo("")

-- def main(args []string)
def main()
    help()
    flag = flags (
        path: "./main.c"
        write_to: "write_to..."
    )
    p = program.new_program()
    p.parse(flag)
