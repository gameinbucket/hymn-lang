import "${std}/big_string" (new_big_string)

class stream
    data string
    pos  int
    line int
    col  int

new_stream(data string) stream
    return stream (
        data: data
        line: 1
    )

stream next() char
    c = self.data[self.pos]
    self.pos += 1
    if c == '\n'
        self.col = 0
        self.line += 1
    else
        self.col += 1
    return c

stream peek() char
    return self.data[self.pos]

stream double_peek() char
    return self.data[self.pos + 1]

stream eof() bool
    return self.pos == len(self.data)

stream fail() string
    data = self.data
    c = data[self.pos]
    b = new_big_string()
    b.write("Line: ")
    b.write(str(self.line))
    b.write("\nColumn: ")
    b.write(str(self.col))
    b.write("\nChar: ")
    b.write_char(c)
    b.write("\nFor: ")
    size = len(data)
    mutable i = 0
    mutable line = 0
    while true
        content = new_big_string()
        while i < size
            d = data[i]
            i += 1
            content.write_char(d)
            if d == '\n'
                line += 1
                break
        if content.len() == 0
            break
        b.write(str(line))
        b.write(": ")
        b.write(content.to_string())
    return b.to_string()
