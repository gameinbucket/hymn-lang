
# there are two reasons for needing interfaces

# 1. for generics we want a contract stating we know we can insert a given interface function at compile time
#    this allows us to make statements such as generic:X has a get()

# 2. given different structs we want a way to store/make calls to a single set containing them
#    this requires significant runtime penalties and much more code behind the scenes

interface get_and_set
    get() int
    set(value int)

class foo: get_and_set
    one int

class bar: get_and_set
    two int

foo get() int
    return self.one

foo set(value int)
    self.one = value

bar get() int
    return self.two

bar set(value int)
    self.two = value

class special
    first  get_and_set
    second get_and_set

main
    f = foo(2)
    echo(f.one)

    b = bar(3)
    echo(b.two)

    s = special (
        first: f
        second: b
    )

    s.first.set(4)
    s.second.set(5)

    echo(s.first.get())
    echo(s.second.get())
