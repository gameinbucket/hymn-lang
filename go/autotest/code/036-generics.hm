type vec
	x float
	y float
	z float

type link<t>
	node t
	next maybe<link<t>>

type array<d>
	data []d
	size int

type attribute<v>
	on  bool
	has v

type node<t, w>
	data  t
	make  w
	value int
	use   attribute<string>
	nest  attribute<t>

main
	f = node<float, string>()
	f.use = attribute()
	f.nest = attribute()
	f.value = 12
	f.data = 99.2
	f.make = "hum"
	f.use.has = "hello"
	f.nest.has = 108.6
	echo(f.data)
	echo(f.make)
	echo(f.value)
	echo(f.use.on)
	echo(f.use.has)
	echo(f.nest.has)

	d = array<vec>()
	d.data = [5:]vec
	d.size = 5
	d.data[0] = vec()
	d.data[0].x = 64.8
	echo(d.data[0].x)

	c = [5]attribute<float>
	c[0] = attribute()
	c[0].has = 32.4
	echo(c[0].has)
	
	b = attribute<string>()
	b.has = "foo"
	echo(b.has)

	a = attribute<int>()
	a.has = 6
	echo(a.has)

	e = link<vec>()
	e.node = vec()
	e.node.z = 122.4
	e.next = link()
	echo(e.node.z)
	match e.next
		none => pass
		some(s) =>
			s.node = vec()
			s.node.y = 144.3
	match e.next
		none => pass
		some(s) =>
			echo(s.node.y)
