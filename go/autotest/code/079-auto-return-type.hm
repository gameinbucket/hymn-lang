enum either<x,y>
    one (
        value x
    )
    two (
        value y
    )

enum zoink<x,y,z>
    foo (
        aaa x
        bbb y
    )
    bar (
        rrr y
        eee z
    )

def exec_parse() either<string,int>
    return either.two(15)

def exec_compile() either<string,int>
    return either.one("ooh wee!")

def exec_boink() zoink<string,int,float>
    return zoink.foo("boink!", 3)

def main()
    e = exec_compile()
    match e
        one(o) echo(o.value)
        two echo("oh no!")

    x = exec_parse()
    match x
        one echo("oh no!")
        two(z) echo(z.value)

    z = exec_boink()
    match z
        foo(f) echo(f.aaa, f.bbb)
        bar echo("oh no!")
