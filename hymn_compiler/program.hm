import hymn_lib (hymn_lib)
import hymn_file (hymn_file)
import flags (flags)
import parser

import hymn:hashmap (hashmap, new_str_map)

class program
    out            string
    directory      string
    libs           string
    hymn_lib_map   hashmap<string,string>
    hymn_library   hymn_lib
    hymn_file_map  hashmap<string,hymn_file>
    hymn_file_list []hymn_file
    sources        hashmap<string,string>
    module_uid     int

def new() program
    return program (
        hymn_lib_map: new_str_map<string>()
        hymn_library: hymn_lib.new()
        hymn_file_map: new_str_map<hymn_file>()
        sources: new_str_map<string>()
    )

def program.parse(f flags)
    uid = str(self.module_uid)
    self.module_uid += 1
    echo("parse uid:", uid)
    parser.parse(f.write_to, f.path)
